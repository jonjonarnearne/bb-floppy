
-- Delay function!
        // Delay 1ms -    r20 =     100 000
        // Delay 10ms -   r20 =   1 000 000 - 0x 00 0F 42 40
        // Delay 100ms -  r20 =  10 000 000 - 0x 00 98 96 80
        // Delay 1000ms - r20 = 100 000 000 - 0x 05 F5 E1 00

        // Delay 1 Sec
        ldi r20.w0, #0xE100
        ldi r20.w2, #0x05F5
del5000ns1:
        sub     r20, r20, #1
        qbne    del5000ns1, r20, #0

-- Pru GPIO test --
.origin 0
.entrypoint START

// toggle some pins by using the OCP Bus from the PRU to the GPIO Register

// Before we can use the pins, we have to make sure the GPIO clocks are started,
// and that the pins have output enable LOW (OE) 

#define GPIO0_P9_11 30
#define GPIO1_P9_12 28
#define GPIO2_P8_18 1
#define GPIO3_P9_30 16

#define DELAY_LOOP #0x00a00000

#define PRU0_ARM_INTERRUPT      19

#define CM_PER 0x44e00000 // Clock module control register (for GPIO[1..3] )
#define CM_WKUP 0x44e00400 // Clock Module wakeup register (for GPIO0)

#define CM_WKUP_GPIO0_CLKCTRL (CM_WKUP | 0x8)
#define CM_PER_GPIO1_CLKCTRL (CM_PER | 0xac)
#define CM_PER_GPIO2_CLKCTRL (CM_PER | 0xb0)
#define CM_PER_GPIO3_CLKCTRL (CM_PER | 0xb4)

#define CLKCTRL_MODULEMODE_DISABLED (~3)
#define CLKCTRL_MODULEMODE_ENABLED 2

#define GPIO0 0x44e07000
#define GPIO1 0x4804c000
#define GPIO2 0x481ac000
#define GPIO3 0x481ae000

#define GPIO_SYSCFG 0x10
#define GPIO_CTRL 0x130

#define GPIO_OE 0x134
#define GPIO_CLEARDATAOUT 0x190
#define GPIO_SETDATAOUT 0x194


START:
        // Enable OCP master port
        LBCO    r0, C4, 4, 4
        CLR     r0, r0, 4
        SBCO    r0, C4, 4, 4

        // Start GPIO0, GPIO2 and GPIO3 CLOCKS, GPIO1 is running by default!
        MOV r2, CLKCTRL_MODULEMODE_ENABLED
        MOV r3, CM_WKUP_GPIO0_CLKCTRL
        SBBO r2, r3, 0, 4
        MOV r3, CM_PER_GPIO2_CLKCTRL
        SBBO r2, r3, 0, 4
        MOV r3, CM_PER_GPIO3_CLKCTRL
        SBBO r2, r3, 0, 4

        // Enable output
        MOV r2, 0 << GPIO0_P9_11
        MOV r3, GPIO0 | GPIO_OE
        SBBO r2, r3, 0, 4

        MOV r2, 0 << GPIO1_P9_12
        MOV r3, GPIO1 | GPIO_OE
        SBBO r2, r3, 0, 4

        MOV r2, 0 << GPIO2_P8_18
        MOV r3, GPIO2 | GPIO_OE
        SBBO r2, r3, 0, 4

        MOV r2, 0 << GPIO3_P9_30
        MOV r3, GPIO3 | GPIO_OE
        SBBO r2, r3, 0, 4

        // Setup loop
        MOV r1, 10
BLINK:
//      SET r30.t14

	MOV r2, 1 << GPIO0_P9_11
	MOV r3, GPIO0 | GPIO_SETDATAOUT
	SBBO r2, r3, 0, 4

	MOV r2, 1 << GPIO1_P9_12
	MOV r3, GPIO1 | GPIO_SETDATAOUT
	SBBO r2, r3, 0, 4

	MOV r2, 1 << GPIO2_P8_18
	MOV r3, GPIO2 | GPIO_SETDATAOUT
	SBBO r2, r3, 0, 4

	MOV r2, 1 << GPIO3_P9_30
	MOV r3, GPIO3 | GPIO_SETDATAOUT
	SBBO r2, r3, 0, 4

        MOV r0, DELAY_LOOP
DELAY:
        SUB r0, r0, 1
        QBNE DELAY, r0, 0

//      CLR r30.t14

        MOV r2, 1 << GPIO0_P9_11
        MOV r3, GPIO0 | GPIO_CLEARDATAOUT
        SBBO r2, r3, 0, 4

        MOV r2, 1 << GPIO1_P9_12
        MOV r3, GPIO1 | GPIO_CLEARDATAOUT
        SBBO r2, r3, 0, 4

        MOV r2, 1 << GPIO2_P8_18
        MOV r3, GPIO2 | GPIO_CLEARDATAOUT
        SBBO r2, r3, 0, 4

        MOV r2, 1 << GPIO3_P9_30
        MOV r3, GPIO3 | GPIO_CLEARDATAOUT
        SBBO r2, r3, 0, 4

        MOV r0, DELAY_LOOP
DELAY2:
        SUB r0, r0, 1
        QBNE DELAY2, r0, 0
        SUB r1, r1, 1
        QBNE BLINK, r1, 0

END:
        MOV r31.b0, PRU0_ARM_INTERRUPT+16
        HALT

